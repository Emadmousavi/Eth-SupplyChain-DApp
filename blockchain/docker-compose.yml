version: "3"

services:
  geth-bootnode:
    hostname: geth-bootnode
    environment:
      - nodekeyhex=08f0e1dee5c1b4645f3331a566009e41a4514b6cd28656d63d0449ecf812812b #Needs to be fix, so that the miners know the resulting enode id
      - bootnodeId=76a8171707eca17647a47ca99ffd348927dfa60102792ea349a25d5192e61855be83b786e376276a306afcceea4ffd1c9c77e4370b417efc39f328a0d068004c # enodeId
      - bootnodeIp=172.25.0.101
    build: ./bootnode
    image: geth-bootnode
    container_name: geth-bootnode
    ports:
      - 30301:30301/udp
      - 30303:30303/udp
    networks:
      chainnet:
        ipv4_address: 172.25.0.101 # The miners need to know the IP address later on

  geth-dev-miner-1:
    hostname: geth-dev-miner-1
    depends_on:
      - geth-bootnode
    build:
      context: ./node
    image: blockchain_node
    container_name: geth-dev-miner-1
    ports:
      - 8539:8545
      - 8540:8546
    healthcheck:
      test: wget http://localhost:8545
      interval: 2s
      timeout: 5s
      retries: 30
    volumes:
      - eth-data-1:/root/.ethash
      - chaindata-1:/root/.ethereum
    env_file:
      - .env
    command: geth --bootnodes "enode://${BOOT_NODE_ID}@${BOOT_NODE_IP}:30301" 
      --nodekeyhex ${MINER_1_NODEKEYHEX} 
      --networkid "6660001" --verbosity 4  
      --http --http.addr "0.0.0.0" --http.port 8545 
      --http.api "eth,web3,net,admin,debug,miner,personal" 
      --http.corsdomain "*" 
      --ws --ws.addr "0.0.0.0" --ws.port 8546 
      --ws.api "eth,web3,net,admin,debug,miner,personal" 
      --ws.origins "*" 
      --syncmode full --mine --miner.gasprice 0 --miner.etherbase ${MINER_1_ADDRESS} 
      --unlock ${MINER_1_ADDRESS} --password ~/.password 
      --allow-insecure-unlock
    networks:
      chainnet:
        ipv4_address: 172.25.0.102 # The monitor needs to know this address

  geth-dev-miner-2:
    hostname: geth-dev-miner-2
    depends_on:
      - geth-bootnode
    build:
      context: ./node
    image: blockchain_node
    container_name: geth-dev-miner-2
    ports:
      - 8541:8545
      - 8542:8546
    healthcheck:
      test: wget http://localhost:8545
      interval: 2s
      timeout: 5s
      retries: 30
    volumes:
      - eth-data-2:/root/.ethash
      - chaindata-2:/root/.ethereum
    env_file:
      - .env
    command: geth --bootnodes "enode://${BOOT_NODE_ID}@${BOOT_NODE_IP}:30301" 
      --nodekeyhex ${MINER_2_NODEKEYHEX} 
      --networkid "6660001" --verbosity 4  
      --http --http.addr "0.0.0.0" --http.port 8545 
      --http.api "eth,web3,net,admin,debug,miner,personal" 
      --http.corsdomain "*" 
      --ws --ws.addr "0.0.0.0" --ws.port 8546 
      --ws.api "eth,web3,net,admin,debug,miner,personal" 
      --ws.origins "*" 
      --syncmode full --mine --miner.gasprice 0 --miner.etherbase ${MINER_2_ADDRESS} 
      --unlock ${MINER_2_ADDRESS} --password ~/.password 
      --allow-insecure-unlock
    networks:
      chainnet:
        ipv4_address: 172.25.0.104
  
  geth-dev-miner-3:
    hostname: geth-dev-miner-3
    depends_on:
      - geth-bootnode
    build:
      context: ./node
    image: blockchain_node
    container_name: geth-dev-miner-3
    ports:
      - 8543:8545
      - 8544:8546
    healthcheck:
      test: wget http://localhost:8545
      interval: 2s
      timeout: 5s
      retries: 30
    volumes:
      - eth-data-3:/root/.ethash
      - chaindata-3:/root/.ethereum
    env_file:
      - .env
    command: geth --bootnodes "enode://${BOOT_NODE_ID}@${BOOT_NODE_IP}:30301" 
      --nodekeyhex ${MINER_3_NODEKEYHEX} 
      --networkid "6660001" --verbosity 4  
      --http --http.addr "0.0.0.0" --http.port 8545 
      --http.api "eth,web3,net,admin,debug,miner,personal" 
      --http.corsdomain "*" 
      --ws --ws.addr "0.0.0.0" --ws.port 8546 
      --ws.api "eth,web3,net,admin,debug,miner,personal" 
      --ws.origins "*" 
      --syncmode full --mine --miner.gasprice 0 --miner.etherbase ${MINER_3_ADDRESS} 
      --unlock ${MINER_3_ADDRESS} --password ~/.password 
      --allow-insecure-unlock
    networks:
      chainnet:
        ipv4_address: 172.25.0.106

  geth-dev-node:
    image: blockchain_node
    hostname: geth-dev-node
    depends_on:
      - geth-dev-miner-2
    environment:
      - address=0x69707aAdf642117532a4Ad821c2d89C0BA45bBe3
      - bootnodeId=76a8171707eca17647a47ca99ffd348927dfa60102792ea349a25d5192e61855be83b786e376276a306afcceea4ffd1c9c77e4370b417efc39f328a0d068004c #derived from the nodekeyhex of the bootnode
      - bootnodeIp=172.25.0.101
    build:
      context: ./node
      args:
        privatekey:  47412a248e8fbe947239bca6e86b0fc7bf026bd9f3a56a33cb65c04855f5eb08
        password: password
    container_name: geth-dev-node
    ports:
      - 8545:8545
      - 8546:8546
    healthcheck:
      test: wget http://localhost:8545
      interval: 2s
      timeout: 5s
      retries: 30
    volumes:
      - eth-data-4:/root/.ethash
      - chaindata-4:/root/.ethereum
    env_file:
      - .env
    command: geth --bootnodes "enode://${BOOT_NODE_ID}@${BOOT_NODE_IP}:30301" 
      --nodekeyhex ${NODE_NODEKEYHEX} 
      --networkid "6660001" --verbosity 4 
      --http --http.addr "0.0.0.0" --http.port 8545 
      --http.api "eth,web3,net,admin,debug,miner,personal" 
      --http.corsdomain "*" --ws --ws.addr "0.0.0.0" --ws.port 8546 
      --ws.api "eth,web3,net,admin,debug,miner,personal" 
      --ws.origins "*" 
      --syncmode full 
      --gcmode archive 
      --unlock ${NODE_ADDRESS} 
      --password ~/.password 
      --allow-insecure-unlock
    networks:
      chainnet:
        ipv4_address: 172.25.0.110

  # node-swarm-1:
  #   depends_on:
  #     - geth-bootnode
  #   ports:
  #     - 8500:8500
  #   command: swarm
  #     --bootnodes enode://${BOOTNODE_ID}@${BOOTNODE_IP}:30301
  #     --bzzapi 0.0.0.0 --corsdomain "*" --httpaddr 0.0.0.0
  #     --bzzaccount ${NODE_ADDRESS} --password ~/.password
  #     --bzznetworkid ${NETWORK_ID}
  #   build:
  #     context: node
  #   container_name: node-swarm-1
  #   networks:
  #     chainnet:
  #       ipv4_address: 172.25.0.210

  # node-swarm-2:
  #   depends_on:
  #     - bootnode
  #   ports:
  #     - 8501:8500
  #   command: swarm
  #     --bootnodes enode://${BOOTNODE_ID}@172.3.0.111:30301
  #     --bzzapi 0.0.0.0 --corsdomain "*" --httpaddr 0.0.0.0
  #     --bzzaccount ${ACCOUNT_2} --password password.txt
  #     --bzznetworkid ${NETWORK_ID}
  #   build:
  #     context: node
  #   container_name: node-swarm-2
  #   networks:
  #     - research

  lite-explorer:
    links:
      - geth-dev-node
    hostname: lite-explorer
    depends_on:
      - geth-dev-node
    image: alethio/ethereum-lite-explorer
    container_name: lite-explorer
    volumes:
      - chaindata-4:/root/.ethereum  
    environment:
      - APP_NODE_URL=http://localhost:8545
      - ETHEREUM_DATADIR=/root/.ethereum
    ports:
      - 8800:80
    networks:
      chainnet:
        ipv4_address: 172.25.0.126

  blockscout-explorer:
    hostname: blockscout-explorer
    depends_on:
      - geth-dev-node
      - blockscout-postgres
    build:
      context: ./blockscout
      args:
        COIN: ETH
    restart: on-failure
    command: /bin/bash -c "mix do ecto.create, ecto.migrate && mix phx.server"
    image: blockscout-explorer
    container_name: blockscout-explorer
    environment:
      - ETHEREUM_JSONRPC_VARIANT=geth
      - ETHEREUM_JSONRPC_HTTP_URL=http://172.25.0.110:8545
      - DATABASE_URL=postgresql://postgres:@172.25.0.128:5432/explorer?ssl=false
      - MIX_ENV=prod
    ports:
      - 4000:4000
    networks:
      chainnet:
        ipv4_address: 172.25.0.127

  blockscout-postgres:
    hostname: blockscout-postgres
    container_name: blockscout-postgres
    image: postgres:12.5
    restart: on-failure
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_PASSWORD='' # default for authentication method trust
      - POSTGRES_USER=postgres # default superuser and owner
    ports:
      - 5432:5432
    networks:
      chainnet:
        ipv4_address: 172.25.0.128

  monitor:
    hostname: monitor
    depends_on:
      - geth-dev-node
    image: buythewhale/ethstats_monitor
    container_name: monitor
    volumes:
      - ./monitor/app.json:/home/ethnetintel/eth-net-intelligence-api/app.json:ro
    networks:
      chainnet:
        ipv4_address: 172.25.0.135

  dashboard:
    hostname: dashboard
    depends_on:
      - geth-dev-node
      - monitor
    image: buythewhale/ethstats
    container_name: dashboard
    volumes:
      - ./dashboard/ws_secret.json:/eth-netstats/ws_secret.json:ro
    ports:
      - 8008:3000
    networks:
      chainnet:
        ipv4_address: 172.25.0.136

networks:
  chainnet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/24

volumes:
  eth-data-1:
  eth-data-2:
  eth-data-3:
  eth-data-4:
  chaindata-1:
  chaindata-2:
  chaindata-3:
  chaindata-4:
  bee-1:
  bee-2:
